{"version":3,"file":"enigma.js","sources":["node_modules/node-event-emitter/index.js","src/event-emitter.js","src/session.js","src/cache.js","src/schema.js","src/rpc-resolver.js","src/rpc.js","src/suspend-resume.js","src/interceptors/request/delta.js","src/interceptors/response/api.js","node_modules/extend/index.js","src/json-patch.js","src/interceptors/response/delta.js","src/interceptors/response/error.js","src/interceptors/response/out-param.js","src/interceptors/response/result.js","src/intercept.js","src/api-cache.js","src/qix.js"],"sourcesContent":["/**\n * Utility functions\n */\n\nvar util = {};\n\nutil.isObject = function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nutil.isNumber = function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nutil.isUndefined = function isUndefined(arg) {\n  return arg === void 0;\n}\n\nutil.isFunction = function isFunction(arg){\n  return typeof arg === 'function';\n}\n\n\n/**\n * EventEmitter class\n */\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!util.isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error' && !this._events.error) {\n    er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      throw Error('Uncaught, unspecified \"error\" event.');\n    }\n    return false;\n  }\n\n  handler = this._events[type];\n\n  if (util.isUndefined(handler))\n    return false;\n\n  if (util.isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (util.isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!util.isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              util.isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (util.isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (util.isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!util.isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n\n      if (util.isFunction(console.error)) {\n        console.error('(node) warning: possible EventEmitter memory ' +\n                      'leak detected. %d listeners added. ' +\n                      'Use emitter.setMaxListeners() to increase limit.',\n                      this._events[type].length);\n      }\n      if (util.isFunction(console.trace))\n        console.trace();\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!util.isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!util.isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (util.isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (util.isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (util.isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (Array.isArray(listeners)) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (util.isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (util.isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n","import EventEmitter from 'node-event-emitter';\n\n/**\n* @module EventEmitter\n*/\nexport default {\n\n  /**\n  * Function used to add event handling to objects passed in.\n  * @param {Object} obj Object instance that will get event handling.\n  */\n  mixin: (obj) => {\n    Object.keys(EventEmitter.prototype).forEach((key) => {\n      obj[key] = EventEmitter.prototype[key];\n    });\n    EventEmitter.init(obj);\n  },\n};\n","import EventEmitter from './event-emitter';\n\nconst RPC_CLOSE_NORMAL = 1000;\nconst RPC_CLOSE_MANUAL_SUSPEND = 4000;\n\nlet cacheId = 0;\n\nclass Session {\n  /**\n  * Creates a new Session instance.\n  * @param {Object} options The configuration option for this class.\n  * @param {ApiCache} options.apis The ApiCache instance to bridge events towards.\n  * @param {Object} options.config The configuration object for this session.\n  * @param {Intercept} options.intercept The intercept instance to use.\n  * @param {RPC} options.rpc The RPC instance to use when communicating towards Engine.\n  * @param {SuspendResume} options.suspendResume The SuspendResume instance to use.\n  */\n  constructor(options) {\n    const session = this;\n    Object.assign(session, options);\n    this.Promise = this.config.Promise;\n    this.definition = this.config.definition;\n    EventEmitter.mixin(session);\n    cacheId += 1;\n    session.id = cacheId;\n    session.rpc.on('socket-error', session.onRpcError.bind(session));\n    session.rpc.on('closed', session.onRpcClosed.bind(session));\n    session.rpc.on('message', session.onRpcMessage.bind(session));\n    session.rpc.on('notification', session.onRpcNotification.bind(session));\n    session.rpc.on('traffic', session.onRpcTraffic.bind(session));\n    session.on('closed', () => session.onSessionClosed());\n  }\n\n  /**\n  * Event handler for re-triggering error events from RPC.\n  * @emits socket-error\n  * @param {Error} err Webocket error event.\n  */\n  onRpcError(err) {\n    if (this.suspendResume.isSuspended) {\n      return;\n    }\n    this.emit('socket-error', err);\n  }\n\n  /**\n  * Event handler for the RPC close event.\n  * @emits suspended\n  * @emits closed\n  * @param {Event} evt WebSocket close event.\n  */\n  onRpcClosed(evt) {\n    if (this.suspendResume.isSuspended) {\n      return;\n    }\n    if (evt.code === RPC_CLOSE_NORMAL || evt.code === RPC_CLOSE_MANUAL_SUSPEND) {\n      return;\n    }\n    if (this.config.suspendOnClose) {\n      this.suspendResume.suspend().then(() => this.emit('suspended', { initiator: 'network' }));\n    } else {\n      this.emit('closed', evt);\n    }\n  }\n\n  /**\n  * Event handler for the RPC message event.\n  * @param {Object} response JSONRPC response.\n  */\n  onRpcMessage(response) {\n    if (this.suspendResume.isSuspended) {\n      return;\n    }\n    if (response.change) {\n      response.change.forEach(handle => this.emitHandleChanged(handle));\n    }\n    if (response.close) {\n      response.close.forEach(handle => this.emitHandleClosed(handle));\n    }\n  }\n\n  /**\n  * Event handler for the RPC notification event.\n  * @emits notification:*\n  * @emits notification:[JSONRPC notification name]\n  * @param {Object} response The JSONRPC notification.\n  */\n  onRpcNotification(response) {\n    this.emit('notification:*', response.method, response.params);\n    this.emit(`notification:${response.method}`, response.params);\n  }\n\n  /**\n  * Event handler for the RPC traffic event.\n  * @emits traffic:*\n  * @emits traffic:sent\n  * @emits traffic:received\n  * @param {String} dir The traffic direction, sent or received.\n  * @param {Object} data JSONRPC request/response/WebSocket message.\n  */\n  onRpcTraffic(dir, data) {\n    this.emit('traffic:*', dir, data);\n    this.emit(`traffic:${dir}`, data);\n  }\n\n  /**\n  * Event handler for cleaning up API instances when a session has been closed.\n  * @emits api#closed\n  */\n  onSessionClosed() {\n    this.apis.getApis().forEach((entry) => {\n      entry.api.emit('closed');\n      entry.api.removeAllListeners();\n    });\n    this.apis.clear();\n  }\n\n  /**\n   * Function used to get an API for a backend object.\n   * @param {Object} args Arguments used to create object API.\n   * @param {Number} args.handle Handle of the backend object.\n   * @param {String} args.id ID of the backend object.\n   * @param {String} args.type QIX type of the backend object. Can for example\n   *                           be \"Doc\" or \"GenericVariable\".\n   * @param {String} args.genericType Custom type of the backend object, if defined in qInfo.\n   * @returns {*} Returns the generated and possibly augmented API.\n   */\n  getObjectApi(args) {\n    const {\n      handle, id, type, genericType,\n    } = args;\n    let api = this.apis.getApi(handle);\n    if (api) {\n      return api;\n    }\n    api = this.definition\n      .generate(type)\n      .create(this, handle, id, genericType);\n    this.apis.add(handle, api);\n    return api;\n  }\n\n  /**\n  * Establishes the RPC socket connection and returns the Global instance.\n  * @returns {Promise} Eventually resolved if the connection was successful.\n  */\n  open() {\n    if (!this.globalPromise) {\n      const args = {\n        handle: -1,\n        id: 'Global',\n        type: 'Global',\n        genericType: 'Global',\n      };\n      this.globalPromise = this.rpc.open()\n        .then(() => this.getObjectApi(args))\n        .then((global) => {\n          this.emit('opened');\n          return global;\n        });\n    }\n    return this.globalPromise;\n  }\n\n  /**\n  * Function used to send data on the RPC socket.\n  * @param {Object} request The request to be sent. (data and some meta info)\n  * @returns {Object} Returns a promise instance.\n  */\n  send(request) {\n    if (this.suspendResume.isSuspended) {\n      return this.Promise.reject(new Error('Session suspended'));\n    }\n    request.id = this.rpc.createRequestId();\n    const promise = this.intercept.executeRequests(this, this.Promise.resolve(request))\n      .then((augmentedRequest) => {\n        const data = Object.assign({}, this.config.protocol, augmentedRequest);\n        // the outKey value is used by multiple-out interceptor, at some point\n        // we need to refactor that implementation and figure out how to transport\n        // this value without hijacking the JSONRPC request object:\n        delete data.outKey;\n        const response = this.rpc.send(data);\n        augmentedRequest.retry = () => this.send(request);\n        return this.intercept.executeResponses(this, response, augmentedRequest);\n      });\n    Session.addToPromiseChain(promise, 'requestId', request.id);\n    return promise;\n  }\n\n  /**\n  * Suspends the session (\"sleeping state\"), and closes the RPC connection.\n  * @emits suspended\n  * @returns {Promise} Eventually resolved when the RPC connection is closed.\n  */\n  suspend() {\n    return this.suspendResume.suspend()\n      .then(() => this.emit('suspended', { initiator: 'manual' }));\n  }\n\n  /**\n  * Resumes a previously suspended session.\n  * @param {Boolean} onlyIfAttached If true, resume only if the session was re-attached.\n  * @returns {Promise} Eventually resolved if the session was successfully resumed,\n  *                    otherwise rejected.\n  */\n  resume(onlyIfAttached) {\n    return this.suspendResume.resume(onlyIfAttached).then((value) => {\n      this.emit('resumed');\n      return value;\n    });\n  }\n\n  /**\n  * Function used to close the session.\n  * @returns {Promise} Eventually resolved when the RPC connection is closed.\n  */\n  close() {\n    this.globalPromise = undefined;\n    return this.rpc.close().then(evt => this.emit('closed', evt));\n  }\n\n  /**\n  * Given a handle, this function will emit the 'changed' event on the\n  * corresponding API instance.\n  * @param {Number} handle The handle of the API instance.\n  * @emits api#changed\n  */\n  emitHandleChanged(handle) {\n    const api = this.apis.getApi(handle);\n    if (api) {\n      api.emit('changed');\n    }\n  }\n\n  /**\n  * Given a handle, this function will emit the 'closed' event on the\n  * corresponding API instance.\n  * @param {Number} handle The handle of the API instance.\n  * @emits api#closed\n  */\n  emitHandleClosed(handle) {\n    const api = this.apis.getApi(handle);\n    if (api) {\n      api.emit('closed');\n      api.removeAllListeners();\n    }\n  }\n\n  /**\n  * Function used to add info on the promise chain.\n  * @private\n  * @param {Promise} promise The promise to add info on.\n  * @param {String} name The property to add info on.\n  * @param {Any} value The info to add.\n  */\n  static addToPromiseChain(promise, name, value) {\n    promise[name] = value;\n    const { then } = promise;\n    promise.then = function patchedThen(...params) {\n      const chain = then.apply(this, params);\n      Session.addToPromiseChain(chain, name, value);\n      return chain;\n    };\n  }\n}\n\nexport default Session;\n","/**\n* Key-value cache\n*/\nclass KeyValueCache {\n  constructor() {\n    this.entries = {};\n  }\n\n  /**\n  * Adds an entry.\n  * @function KeyValueCache#add\n  * @param {String} key The key representing an entry.\n  * @param {*} entry The entry to be added.\n  */\n  add(key, entry) {\n    key += '';\n    if (typeof this.entries[key] !== 'undefined') {\n      throw new Error(`Entry already defined with key ${key}`);\n    }\n    this.entries[key] = entry;\n  }\n\n  /**\n  * Sets an entry.\n  * @function KeyValueCache#set\n  * @param {String} key The key representing an entry.\n  * @param {*} entry The entry.\n  */\n  set(key, entry) {\n    key += '';\n    this.entries[key] = entry;\n  }\n\n  /**\n  * Removes an entry.\n  * @function KeyValueCache#remove\n  * @param {String} key The key representing an entry.\n  */\n  remove(key) {\n    delete this.entries[key];\n  }\n\n  /**\n  * Gets an entry.\n  * @function KeyValueCache#get\n  * @param {String} key The key representing an entry.\n  * @returns {*} The entry for the key.\n  */\n  get(key) {\n    return this.entries[key];\n  }\n\n  /**\n  * Gets a list of all entries.\n  * @function KeyValueCache#getAll\n  * @returns {Array} The list of entries including its `key` and `value` properties.\n  */\n  getAll() {\n    return Object.keys(this.entries).map(key =>\n      ({\n        key,\n        value: this.entries[key],\n      }));\n  }\n\n  /**\n  * Gets a key for an entry.\n  * @function KeyValueCache#getKey\n  * @param {*} entry The entry to locate the key for.\n  * @returns {String} The key representing an entry.\n  */\n  getKey(entry) {\n    return Object.keys(this.entries).filter(key =>\n      this.entries[key] === entry)[0];\n  }\n\n  /**\n  * Clears the cache of all entries.\n  * @function KeyValueCache#clear\n  */\n  clear() {\n    this.entries = {};\n  }\n}\n\nexport default KeyValueCache;\n","import KeyValueCache from './cache';\nimport Events from './event-emitter';\n\nconst { hasOwnProperty } = Object.prototype;\n\n/**\n* Returns the camelCase counterpart of a symbol.\n* @param {String} symbol The symbol.\n* @return the camelCase counterpart.\n*/\nfunction toCamelCase(symbol) {\n  return symbol.substring(0, 1).toLowerCase() + symbol.substring(1);\n}\n\n/**\n * A facade function that allows parameters to be passed either by name\n * (through an object), or by position (through an array).\n * @param {Function} base The function that is being overriden. Will be\n *                        called with parameters in array-form.\n * @param {Object} defaults Parameter list and it's default values.\n * @param {*} params The parameters.\n */\nfunction namedParamFacade(base, defaults, ...params) {\n  if (params.length === 1 && typeof params[0] === 'object') {\n    const valid = Object.keys(params[0]).every(key => hasOwnProperty.call(defaults, key));\n    if (valid) {\n      params = Object.keys(defaults).map(key => params[0][key] || defaults[key]);\n    }\n  }\n  return base.apply(this, params);\n}\n\n/**\n* Qix schema definition.\n*/\nclass Schema {\n  /**\n  * Create a new schema instance.\n  * @param {Configuration} config The configuration for QIX.\n  */\n  constructor(config) {\n    this.config = config;\n    this.Promise = config.Promise;\n    this.schema = config.schema;\n    this.mixins = new KeyValueCache();\n    this.types = new KeyValueCache();\n  }\n\n  /**\n  * Function used to add a mixin object to the mixin cache. Will be mixed into the API\n  * of the specified key when generated.\n  * @param {Object} mixin Mixin object.\n  * @param {String|Array<String>} mixin.types String or array of strings containing the\n  *                                           API-types that will be mixed in.\n  * @param {Object} [mixin.extend] Object literal containing the methods that\n  *                                will be extended on the specified API.\n  * @param {Object} [mixin.override] Object literal containing the methods to\n  *                                  override existing methods.\n  * @param {Function} [mixin.init] Init function that, if defined, will run when an API is\n  *                                instantiated. It runs with Promise and API object as parameters.\n  */\n  registerMixin({\n    types, type, extend, override, init,\n  }) {\n    if (!Array.isArray(types)) {\n      types = [types];\n    }\n    // to support a single type\n    if (type) {\n      types.push(type);\n    }\n    const cached = { extend, override, init };\n    types.forEach((typeKey) => {\n      const entryList = this.mixins.get(typeKey);\n      if (entryList) {\n        entryList.push(cached);\n      } else {\n        this.mixins.add(typeKey, [cached]);\n      }\n    });\n  }\n\n  /**\n  * Function used to generate a type definition.\n  * @param {String} type The type.\n  * @returns {{create: Function, def: Object}} Returns an object with a definition\n  *          of the type and a create factory.\n  */\n  generate(type) {\n    const entry = this.types.get(type);\n    if (entry) {\n      return entry;\n    }\n    if (!this.schema.structs[type]) {\n      throw new Error(`${type} not found`);\n    }\n    const factory = this.generateApi(type, this.schema.structs[type]);\n    this.types.add(type, factory);\n    return factory;\n  }\n\n  /**\n  * Function used to generate an API definition for a given type.\n  * @param {String} type The type to generate.\n  * @param {Object} schema The schema describing the type.\n  * @returns {{create: (function(session:Object, handle:Number, id:String,\n  *          customKey:String)), def: Object}} Returns the API definition.\n  */\n  generateApi(type, schema) {\n    const api = Object.create({});\n\n    this.generateDefaultApi(api, schema); // Generate default\n    this.mixinType(type, api); // Mixin default type\n    this.mixinNamedParamFacade(api, schema); // Mixin named parameter support\n\n    const create = function create(session, handle, id, customKey) {\n      const instance = Object.create(api);\n\n      Events.mixin(instance); // Always mixin event-emitter per instance\n\n      Object.defineProperties(instance, {\n        session: {\n          enumerable: true,\n          value: session,\n        },\n        handle: {\n          enumerable: true,\n          value: handle,\n          writable: true,\n        },\n        id: {\n          enumerable: true,\n          value: id,\n        },\n        type: {\n          enumerable: true,\n          value: type,\n        },\n        genericType: {\n          enumerable: true,\n          value: customKey,\n        },\n      });\n\n      let mixinList = this.mixins.get(type) || [];\n      if (customKey !== type) {\n        this.mixinType(customKey, instance); // Mixin custom types\n        mixinList = mixinList.concat(this.mixins.get(customKey) || []);\n      }\n      mixinList.forEach((mixin) => {\n        if (typeof mixin.init === 'function') {\n          mixin.init({ config: this.config, api: instance });\n        }\n      });\n\n      return instance;\n    }.bind(this);\n\n    return {\n      create,\n      def: api,\n    };\n  }\n\n  /**\n  * Function used to generate the methods with the right handlers to the object\n  * API that is being generated.\n  * @param {Object} api The object API that is currently being generated.\n  * @param {Object} schema The API definition.\n  */\n  generateDefaultApi(api, schema) {\n    Object.keys(schema).forEach((method) => {\n      const out = schema[method].Out && schema[method].Out;\n      const outKey = out.length === 1 ? out[0].Name : -1;\n      const fnName = toCamelCase(method);\n\n      api[fnName] = function generatedMethod(...params) {\n        return this.session.send({\n          handle: this.handle,\n          method,\n          params,\n          outKey,\n        });\n      };\n    });\n  }\n\n  /**\n  * Function used to add mixin methods to a specified API.\n  * @param {String} type Used to specify which mixin should be woven in.\n  * @param {Object} api The object that will be woven.\n  */\n  mixinType(type, api) {\n    const mixinList = this.mixins.get(type);\n    if (mixinList) {\n      mixinList.forEach(({ extend = {}, override = {} }) => {\n        Object.keys(override).forEach((key) => {\n          if (typeof api[key] === 'function' && typeof override[key] === 'function') {\n            const baseFn = api[key];\n            api[key] = function wrappedFn(...args) {\n              return override[key].apply(this, [baseFn.bind(this), ...args]);\n            };\n          } else {\n            throw new Error(`No function to override. Type: ${type} function: ${key}`);\n          }\n        });\n        Object.keys(extend).forEach((key) => {\n          // handle overrides\n          if (typeof api[key] === 'function' && typeof extend[key] === 'function') {\n            throw new Error(`Extend is not allowed for this mixin. Type: ${type} function: ${key}`);\n          } else {\n            api[key] = extend[key];\n          }\n        });\n      });\n    }\n  }\n\n  /**\n  * Function used to mixin the named parameter facade.\n  * @param {Object} api The object API that is currently being generated.\n  * @param {Object} schema The API definition.\n  */\n  mixinNamedParamFacade(api, schema) {\n    Object.keys(schema).forEach((key) => {\n      const fnName = toCamelCase(key);\n      const base = api[fnName];\n      const defaults = schema[key].In.reduce((result, item) => {\n        result[item.Name] = item.DefaultValue;\n        return result;\n      }, {});\n\n      api[fnName] = function namedParamWrapper(...params) {\n        return namedParamFacade.apply(this, [base, defaults, ...params]);\n      };\n    });\n  }\n}\n\nexport default Schema;\n","import Events from './event-emitter';\n\n/**\n * Helper class for handling RPC calls\n */\nclass RPCResolver {\n  constructor(id, resolve, reject) {\n    Events.mixin(this);\n    this.id = id;\n    this.resolve = resolve;\n    this.reject = reject;\n  }\n  resolveWith(data) {\n    this.resolve(data);\n    this.emit('resolved', this.id);\n  }\n  rejectWith(err) {\n    this.reject(err);\n    this.emit('rejected', this.id);\n  }\n}\n\nexport default RPCResolver;\n","import Events from './event-emitter';\nimport RPCResolver from './rpc-resolver';\n\n/**\n* This class handles remote procedure calls on a web socket.\n*/\nclass RPC {\n  /**\n  * Create a new RPC instance.\n  * @param {Object} options The configuration options for this class.\n  * @param {Function} options.Promise The promise constructor to use.\n  * @param {String} options.url The complete websocket URL used to connect.\n  * @param {Function} options.createSocket The function callback to create a WebSocket.\n  */\n  constructor(options) {\n    Object.assign(this, options);\n    Events.mixin(this);\n    this.resolvers = {};\n    this.requestId = 0;\n    this.openedPromise = undefined;\n  }\n\n  /**\n  * Opens a connection to the configured endpoint.\n  * @param {Boolean} force - ignores all previous and outstanding open calls if set to true.\n  * @returns {Object} A promise instance.\n  */\n  open(force = false) {\n    if (!force && this.openedPromise) {\n      return this.openedPromise;\n    }\n\n    try {\n      this.socket = this.createSocket(this.url);\n    } catch (err) {\n      return this.Promise.reject(err);\n    }\n\n    this.socket.onopen = this.onOpen.bind(this);\n    this.socket.onclose = this.onClose.bind(this);\n    this.socket.onerror = this.onError.bind(this);\n    this.socket.onmessage = this.onMessage.bind(this);\n    this.openedPromise = new this.Promise((resolve, reject) => this.registerResolver('opened', resolve, reject));\n    this.closedPromise = new this.Promise((resolve, reject) => this.registerResolver('closed', resolve, reject));\n    return this.openedPromise;\n  }\n\n  /**\n  * Resolves the open promise when a connection is successfully established.\n  */\n  onOpen() {\n    this.resolvers.opened.resolveWith(() => this.closedPromise);\n  }\n\n  /**\n  * Resolves the close promise when a connection is closed.\n  * @param {Object} event - The event describing close.\n  */\n  onClose(event) {\n    this.emit('closed', event);\n    this.resolvers.closed.resolveWith(event);\n    this.rejectAllOutstandingResolvers({ code: -1, message: 'Socket closed' });\n  }\n\n  /**\n  * Closes a connection.\n  * @param {Number} [code=1000] - The reason code for closing the connection.\n  * @param {String} [reason=\"\"] - The human readable string describing why the connection is closed.\n  * @returns {Object} Returns a promise instance.\n  */\n  close(code = 1000, reason = '') {\n    if (this.socket) {\n      this.socket.close(code, reason);\n      this.socket = null;\n    }\n    return this.closedPromise;\n  }\n\n  /**\n  * Emits an error event and rejects the open promise if an error is raised on the connection.\n  * @param {Object} event - The event describing the error.\n  */\n  onError(event) {\n    if (this.resolvers.opened) {\n      this.resolvers.opened.rejectWith(event);\n    } else {\n      // only emit errors after the initial open promise has been resolved,\n      // this makes it possible to catch early websocket errors as well\n      // as run-time ones:\n      this.emit('socket-error', event);\n    }\n    this.rejectAllOutstandingResolvers({ code: -1, message: 'Socket error' });\n  }\n\n  /**\n  * Parses the onMessage event on the connection and resolve the promise for the request.\n  * @param {Object} event - The event describing the message.\n  */\n  onMessage(event) {\n    const data = JSON.parse(event.data);\n    this.emit('traffic', 'received', data);\n    if (typeof data.id !== 'undefined') {\n      this.emit('message', data);\n      this.resolvers[data.id].resolveWith(data);\n    } else {\n      this.emit(data.params ? 'notification' : 'message', data);\n    }\n  }\n\n  /**\n  * Rejects all outstanding resolvers.\n  * @param {Object} reason - The reject reason.\n  */\n  rejectAllOutstandingResolvers(reason) {\n    Object.keys(this.resolvers).forEach((id) => {\n      if (id === 'opened' || id === 'closed') {\n        return; // \"opened\" and \"closed\" should not be handled here\n      }\n      const resolver = this.resolvers[id];\n      resolver.rejectWith(reason);\n    });\n  }\n\n  /**\n  * Unregisters a resolver.\n  * @param {Number|String} id - The ID to unregister the resolver with.\n  */\n  unregisterResolver(id) {\n    const resolver = this.resolvers[id];\n    resolver.removeAllListeners();\n    delete this.resolvers[id];\n  }\n\n  /**\n  * Registers a resolver.\n  * @param {Number|String} id - The ID to register the resolver with.\n  * @returns {Function} The promise executor function.\n  */\n  registerResolver(id, resolve, reject) {\n    const resolver = new RPCResolver(id, resolve, reject);\n    this.resolvers[id] = resolver;\n    resolver.on('resolved', resolvedId => this.unregisterResolver(resolvedId));\n    resolver.on('rejected', rejectedId => this.unregisterResolver(rejectedId));\n  }\n\n  /**\n  * Sends data on the socket.\n  * @param {Object} data - The data to send.\n  * @returns {Object} A promise instance.\n  */\n  send(data) {\n    if (!this.socket || this.socket.readyState !== this.socket.OPEN) {\n      return this.Promise.reject(new Error('Not connected'));\n    }\n    if (!data.id) {\n      data.id = this.createRequestId();\n    }\n    data.jsonrpc = '2.0';\n    return new this.Promise((resolve, reject) => {\n      this.socket.send(JSON.stringify(data));\n      this.emit('traffic', 'sent', data);\n      return this.registerResolver(data.id, resolve, reject);\n    });\n  }\n\n  createRequestId() {\n    this.requestId += 1;\n    return this.requestId;\n  }\n}\n\nexport default RPC;\n","const ON_ATTACHED_TIMEOUT_MS = 5000;\nconst RPC_CLOSE_MANUAL_SUSPEND = 4000;\n\nclass SuspendResume {\n  /**\n  * Creates a new SuspendResume instance.\n  * @param {Object} options The configuration option for this class.\n  * @param {Promise} options.Promise The promise constructor to use.\n  * @param {RPC} options.rpc The RPC instance to use when communicating towards Engine.\n  * @param {ApiCache} options.apis The ApiCache instance to use.\n  */\n  constructor(options) {\n    Object.assign(this, options);\n    this.isSuspended = false;\n    this.rpc.on('traffic', (dir, data) => {\n      if (dir === 'sent' && data.method === 'OpenDoc') {\n        this.openDocParams = data.params;\n      }\n    });\n  }\n\n  /**\n  * Function used to restore the rpc connection.\n  * @param {Boolean} onlyIfAttached - if true, the returned promise will resolve\n  *                                   only if the session can be re-attached.\n  * @returns {Object} Returns a promise instance.\n  */\n  restoreRpcConnection(onlyIfAttached) {\n    return this.reopen(ON_ATTACHED_TIMEOUT_MS).then((sessionState) => {\n      if (sessionState === 'SESSION_CREATED' && onlyIfAttached) {\n        return this.Promise.reject(new Error('Not attached'));\n      }\n      return this.Promise.resolve();\n    });\n  }\n\n  /**\n  * Function used to restore the global API.\n  * @param {Object} changed - A list where the restored APIs will be added.\n  * @returns {Object} Returns a promise instance.\n  */\n  restoreGlobal(changed) {\n    const global = this.apis.getApisByType('Global').pop();\n    changed.push(global.api);\n    return this.Promise.resolve();\n  }\n\n  /**\n  * Function used to restore the doc API.\n  * @param {String} sessionState - The state of the session, attached or created.\n  * @param {Array} closed - A list where the closed of APIs APIs will be added.\n  * @param {Object} changed - A list where the restored APIs will be added.\n  * @returns {Object} Returns a promise instance.\n  */\n  restoreDoc(closed, changed) {\n    const doc = this.apis.getApisByType('Doc').pop();\n\n    if (!doc) {\n      return this.Promise.resolve();\n    }\n\n    return this.rpc.send({\n      method: 'GetActiveDoc',\n      handle: -1,\n      params: [],\n    }).then((response) => {\n      if (response.error && this.openDocParams) {\n        return this.rpc.send({\n          method: 'OpenDoc',\n          handle: -1,\n          params: this.openDocParams,\n        });\n      }\n      return response;\n    }).then((response) => {\n      if (response.error) {\n        closed.push(doc.api);\n        return this.Promise.resolve();\n      }\n      const handle = response.result.qReturn.qHandle;\n      doc.api.handle = handle;\n      changed.push(doc.api);\n      return this.Promise.resolve(doc.api);\n    });\n  }\n\n  /**\n  * Function used to restore the APIs on the doc.\n  * @param {Object} doc - The doc API on which the APIs we want to restore exist.\n  * @param {Array} closed - A list where the closed of APIs APIs will be added.\n  * @param {Object} changed - A list where the restored APIs will be added.\n  * @returns {Object} Returns a promise instance.\n  */\n  restoreDocObjects(doc, closed, changed) {\n    const tasks = [];\n    const apis = this.apis.getApis()\n      .map(entry => entry.api)\n      .filter(api => api.type !== 'Global' && api.type !== 'Doc');\n\n    if (!doc) {\n      apis.forEach(api => closed.push(api));\n      return this.Promise.resolve();\n    }\n\n    apis.forEach((api) => {\n      const method = SuspendResume.buildGetMethodName(api.type);\n\n      if (!method) {\n        closed.push(api);\n      } else {\n        const request = this.rpc.send({\n          method,\n          handle: doc.handle,\n          params: [api.id],\n        }).then((response) => {\n          if (response.error || !response.result.qReturn.qHandle) {\n            closed.push(api);\n          } else {\n            api.handle = response.result.qReturn.qHandle;\n            changed.push(api);\n          }\n        });\n        tasks.push(request);\n      }\n    });\n    return this.Promise.all(tasks);\n  }\n\n  /**\n  * Set the instance as suspended.\n  */\n  suspend() {\n    this.isSuspended = true;\n    return this.rpc.close(RPC_CLOSE_MANUAL_SUSPEND);\n  }\n\n  /**\n  * Resumes a previously suspended RPC connection, and refreshes the API cache.\n  *                                APIs unabled to be restored has their 'closed'\n  *                                event triggered, otherwise 'changed'.\n  * @param {Boolean} onlyIfAttached if true, resume only if the session was re-attached.\n  * @returns {Promise} Eventually resolved if the RPC connection was successfully resumed,\n  *                    otherwise rejected.\n  */\n  resume(onlyIfAttached) {\n    const changed = [];\n    const closed = [];\n\n    return this.restoreRpcConnection(onlyIfAttached)\n      .then(() => this.restoreGlobal(changed))\n      .then(() => this.restoreDoc(closed, changed))\n      .then(doc => this.restoreDocObjects(doc, closed, changed))\n      .then(() => {\n        this.isSuspended = false;\n        this.apis.clear();\n        closed.forEach((api) => {\n          api.emit('closed');\n          api.removeAllListeners();\n        });\n        changed.forEach((api) => {\n          this.apis.add(api.handle, api);\n          if (api.type !== 'Global') {\n            api.emit('changed');\n          }\n        });\n      })\n      .catch(err => this.rpc.close().then(() => this.Promise.reject(err)));\n  }\n\n  /**\n  * Reopens the connection and waits for the OnConnected notification.\n  * @param {Number} timeout - The time to wait for the OnConnected notification.\n  * @returns {Object} A promise containing the session state (SESSION_CREATED or SESSION_ATTACHED).\n  */\n  reopen(timeout) {\n    let timer;\n    let notificationResolve;\n    let notificationReceived = false;\n    const notificationPromise = new this.Promise((resolve) => { notificationResolve = resolve; });\n\n    const waitForNotification = () => {\n      if (!notificationReceived) {\n        timer = setTimeout(() => notificationResolve('SESSION_CREATED'), timeout);\n      }\n      return notificationPromise;\n    };\n\n    const onNotification = (data) => {\n      if (data.method !== 'OnConnected') return;\n      clearTimeout(timer);\n      notificationResolve(data.params.qSessionState);\n      notificationReceived = true;\n    };\n\n    this.rpc.on('notification', onNotification);\n\n    return this.rpc.open(true)\n      .then(waitForNotification)\n      .then((state) => {\n        this.rpc.removeListener('notification', onNotification);\n        return state;\n      })\n      .catch((err) => {\n        this.rpc.removeListener('notification', onNotification);\n        return this.Promise.reject(err);\n      });\n  }\n\n  /**\n  * Function used to build the get method names for Doc APIs.\n  * @param {String} type - The API type.\n  * @returns {String} Returns the get method name, or undefined if the type cannot be restored.\n  */\n  static buildGetMethodName(type) {\n    if (type === 'Field' || type === 'Variable') {\n      return null;\n    } else if (type === 'GenericVariable') {\n      return 'GetVariableById';\n    }\n    return type.replace('Generic', 'Get');\n  }\n}\n\nexport default SuspendResume;\n","const SUCCESS_KEY = 'qSuccess';\n\nexport default function deltaRequestInterceptor(session, request) {\n  const delta =\n    session.config.protocol.delta &&\n    request.outKey !== -1 &&\n    request.outKey !== SUCCESS_KEY;\n  if (delta) {\n    request.delta = delta;\n  }\n  return request;\n}\n","/**\n* Response interceptor for generating APIs. Handles the quirks of engine not\n* returning an error when an object is missing.\n* @param {Object} session - The session the intercept is being executed on.\n* @param {Object} request - The JSON-RPC request.\n* @param {Object} response - The response.\n* @returns {Object} - Returns the generated API\n*/\nexport default function apiInterceptor(session, request, response) {\n  if (response.qHandle && response.qType) {\n    return session.getObjectApi({\n      handle: response.qHandle,\n      type: response.qType,\n      id: response.qGenericId,\n      genericType: response.qGenericType,\n    });\n  } else if (response.qHandle === null && response.qType === null) {\n    return session.config.Promise.reject(new Error('Object not found'));\n  }\n  return response;\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import originalExtend from 'extend';\n\nconst extend = originalExtend.bind(null, true);\nconst JSONPatch = {};\nconst { isArray } = Array;\nfunction isObject(v) { return v != null && !Array.isArray(v) && typeof v === 'object'; }\nfunction isUndef(v) { return typeof v === 'undefined'; }\nfunction isFunction(v) { return typeof v === 'function'; }\n\n/**\n* Generate an exact duplicate (with no references) of a specific value.\n*\n* @private\n* @param {Object} The value to duplicate\n* @returns {Object} a unique, duplicated value\n*/\nfunction generateValue(val) {\n  if (val) {\n    return extend({}, { val }).val;\n  }\n  return val;\n}\n\n/**\n* An additional type checker used to determine if the property is of internal\n* use or not a type that can be translated into JSON (like functions).\n*\n* @private\n* @param {Object} obj The object which has the property to check\n* @param {String} The property name to check\n* @returns {Boolean} Whether the property is deemed special or not\n*/\nfunction isSpecialProperty(obj, key) {\n  return isFunction(obj[key]) ||\n    key.substring(0, 2) === '$$' ||\n    key.substring(0, 1) === '_';\n}\n\n/**\n* Finds the parent object from a JSON-Pointer (\"/foo/bar/baz\" = \"bar\" is \"baz\" parent),\n* also creates the object structure needed.\n*\n* @private\n* @param {Object} data The root object to traverse through\n* @param {String} The JSON-Pointer string to use when traversing\n* @returns {Object} The parent object\n*/\nfunction getParent(data, str) {\n  const seperator = '/';\n  const parts = str.substring(1).split(seperator).slice(0, -1);\n  let numPart;\n\n  parts.forEach((part, i) => {\n    if (i === parts.length) {\n      return;\n    }\n    numPart = +part;\n    const newPart = !isNaN(numPart) ? [] : {};\n    data[numPart || part] = isUndef(data[numPart || part]) ?\n      newPart :\n      data[part];\n    data = data[numPart || part];\n  });\n\n  return data;\n}\n\n/**\n* Cleans an object of all its properties, unless they're deemed special or\n* cannot be removed by configuration.\n*\n* @private\n* @param {Object} obj The object to clean\n*/\nfunction emptyObject(obj) {\n  Object.keys(obj).forEach((key) => {\n    const config = Object.getOwnPropertyDescriptor(obj, key);\n\n    if (config.configurable && !isSpecialProperty(obj, key)) {\n      delete obj[key];\n    }\n  });\n}\n\n/**\n* Compare an object with another, could be object, array, number, string, bool.\n*\n* @param {Object} a The first object to compare\n* @param {Object} a The second object to compare\n* @returns {Boolean} Whether the objects are identical\n*/\nfunction compare(a, b) {\n  let isIdentical = true;\n\n  if (isObject(a) && isObject(b)) {\n    if (Object.keys(a).length !== Object.keys(b).length) {\n      return false;\n    }\n    Object.keys(a).forEach((key) => {\n      if (!compare(a[key], b[key])) {\n        isIdentical = false;\n      }\n    });\n    return isIdentical;\n  } else if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0, l = a.length; i < l; i += 1) {\n      if (!compare(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return a === b;\n}\n\n/**\n* Generates patches by comparing two arrays.\n*\n* @private\n* @param {Array} oldA The old (original) array, which will be patched\n* @param {Array} newA The new array, which will be used to compare against\n* @returns {Array} An array of patches (if any)\n*/\nfunction patchArray(original, newA, basePath) {\n  let patches = [];\n  const oldA = original.slice();\n  let tmpIdx = -1;\n\n  function findIndex(a, id, idx) {\n    if (a[idx] && isUndef(a[idx].qInfo)) {\n      return null;\n    } else if (a[idx] && a[idx].qInfo.qId === id) {\n      // shortcut if identical\n      return idx;\n    }\n    for (let ii = 0, ll = a.length; ii < ll; ii += 1) {\n      if (a[ii] && a[ii].qInfo.qId === id) {\n        return ii;\n      }\n    }\n    return -1;\n  }\n\n  if (compare(newA, oldA)) {\n    // array is unchanged\n    return patches;\n  }\n\n  if (!isUndef(newA[0]) && isUndef(newA[0].qInfo)) {\n    // we cannot create patches without unique identifiers, replace array...\n    patches.push({\n      op: 'replace',\n      path: basePath,\n      value: newA,\n    });\n    return patches;\n  }\n\n  for (let i = oldA.length - 1; i >= 0; i -= 1) {\n    tmpIdx = findIndex(newA, oldA[i].qInfo && oldA[i].qInfo.qId, i);\n    if (tmpIdx === -1) {\n      patches.push({\n        op: 'remove',\n        path: `${basePath}/${i}`,\n      });\n      oldA.splice(i, 1);\n    } else {\n      patches = patches.concat(JSONPatch.generate(oldA[i], newA[tmpIdx], `${basePath}/${i}`));\n    }\n  }\n\n  for (let i = 0, l = newA.length; i < l; i += 1) {\n    tmpIdx = findIndex(oldA, newA[i].qInfo && newA[i].qInfo.qId);\n    if (tmpIdx === -1) {\n      patches.push({\n        op: 'add',\n        path: `${basePath}/${i}`,\n        value: newA[i],\n      });\n      oldA.splice(i, 0, newA[i]);\n    } else if (tmpIdx !== i) {\n      patches.push({\n        op: 'move',\n        path: `${basePath}/${i}`,\n        from: `${basePath}/${tmpIdx}`,\n      });\n      oldA.splice(i, 0, oldA.splice(tmpIdx, 1)[0]);\n    }\n  }\n  return patches;\n}\n\n/**\n* Generate an array of JSON-Patch:es following the JSON-Patch Specification Draft.\n*\n* See [specification draft](http://tools.ietf.org/html/draft-ietf-appsawg-json-patch-10)\n*\n* Does NOT currently generate patches for arrays (will replace them)\n*\n* @param {Object} original The object to patch to\n* @param {Object} newData The object to patch from\n* @param {String} [basePath] The base path to use when generating the paths for\n*                            the patches (normally not used)\n* @returns {Array} An array of patches\n*/\nJSONPatch.generate = function generate(original, newData, basePath) {\n  basePath = basePath || '';\n  let patches = [];\n\n  Object.keys(newData).forEach((key) => {\n    const val = generateValue(newData[key]);\n    const oldVal = original[key];\n    const tmpPath = `${basePath}/${key}`;\n\n    if (compare(val, oldVal) || isSpecialProperty(newData, key)) {\n      return;\n    }\n    if (isUndef(oldVal)) {\n      // property does not previously exist\n      patches.push({\n        op: 'add',\n        path: tmpPath,\n        value: val,\n      });\n    } else if (isObject(val) && isObject(oldVal)) {\n      // we need to generate sub-patches for this, since it already exist\n      patches = patches.concat(JSONPatch.generate(oldVal, val, tmpPath));\n    } else if (isArray(val) && isArray(oldVal)) {\n      patches = patches.concat(patchArray(oldVal, val, tmpPath));\n    } else {\n      // it's a simple property (bool, string, number)\n      patches.push({\n        op: 'replace',\n        path: `${basePath}/${key}`,\n        value: val,\n      });\n    }\n  });\n\n  Object.keys(original).forEach((key) => {\n    if (isUndef(newData[key]) && !isSpecialProperty(original, key)) {\n      // this property does not exist anymore\n      patches.push({\n        op: 'remove',\n        path: `${basePath}/${key}`,\n      });\n    }\n  });\n\n  return patches;\n};\n\n/**\n* Apply a list of patches to an object.\n*\n* @param {Object} original The object to patch\n* @param {Array} patches The list of patches to apply\n*/\nJSONPatch.apply = function apply(original, patches) {\n  patches.forEach((patch) => {\n    let parent = getParent(original, patch.path);\n    let key = patch.path.split('/').splice(-1)[0];\n    let target = key && isNaN(+key) ? parent[key] : parent[+key] || parent;\n    const from = patch.from ? patch.from.split('/').splice(-1)[0] : null;\n\n    if (patch.path === '/') {\n      parent = null;\n      target = original;\n    }\n\n    if (patch.op === 'add' || patch.op === 'replace') {\n      if (isArray(parent)) {\n        // trust indexes from patches, so don't replace the index if it's an add\n        if (key === '-') {\n          key = parent.length;\n        }\n        parent.splice(+key, patch.op === 'add' ? 0 : 1, patch.value);\n      } else if (isArray(target) && isArray(patch.value)) {\n        const newValues = patch.value.slice();\n        // keep array reference if possible...\n        target.length = 0;\n        target.push(...newValues);\n      } else if (isObject(target) && isObject(patch.value)) {\n        // keep object reference if possible...\n        emptyObject(target);\n        extend(target, patch.value);\n      } else if (!parent) {\n        throw new Error('Patchee is not an object we can patch');\n      } else {\n        // simple value\n        parent[key] = patch.value;\n      }\n    } else if (patch.op === 'move') {\n      const oldParent = getParent(original, patch.from);\n      if (isArray(parent)) {\n        parent.splice(+key, 0, oldParent.splice(+from, 1)[0]);\n      } else {\n        parent[key] = oldParent[from];\n        delete oldParent[from];\n      }\n    } else if (patch.op === 'remove') {\n      if (isArray(parent)) {\n        parent.splice(+key, 1);\n      } else {\n        delete parent[key];\n      }\n    }\n  });\n};\n\n/**\n* Deep clone an object.\n*\n* @param {Object} obj The object to clone\n* @returns {Object} A new object identical to the `obj`\n*/\nJSONPatch.clone = function clone(obj) {\n  return extend({}, obj);\n};\n\n/**\n* Creates a JSON-patch.\n*\n* @param {String} op The operation of the patch. Available values: \"add\", \"remove\", \"move\"\n* @param {Object} [val] The value to set the `path` to. If `op` is `move`, `val`\n*                       is the \"from JSON-path\" path\n* @param {String} path The JSON-path for the property to change (e.g. \"/qHyperCubeDef/columnOrder\")\n* @returns {Object} A patch following the JSON-patch specification\n*/\nJSONPatch.createPatch = function createPatch(op, val, path) {\n  const patch = {\n    op: op.toLowerCase(),\n    path,\n  };\n  if (patch.op === 'move') {\n    patch.from = val;\n  } else if (typeof val !== 'undefined') {\n    patch.value = val;\n  }\n  return patch;\n};\n\n/**\n* Apply the differences of two objects (keeping references if possible).\n* Identical to running `JSONPatch.apply(original, JSONPatch.generate(original, newData));`\n*\n* @param {Object} original The object to update/patch\n* @param {Object} newData the object to diff against\n*\n* @example\n* var obj1 = { foo: [1,2,3], bar: { baz: true, qux: 1 } };\n* var obj2 = { foo: [4,5,6], bar: { baz: false } };\n* JSONPatch.updateObject(obj1, obj2);\n* // => { foo: [4,5,6], bar: { baz: false } };\n*/\nJSONPatch.updateObject = function updateObject(original, newData) {\n  if (!Object.keys(original).length) {\n    extend(original, newData);\n    return;\n  }\n  JSONPatch.apply(original, JSONPatch.generate(original, newData));\n};\n\nexport default JSONPatch;\n","import JSONPatch from '../../json-patch';\nimport KeyValueCache from '../../cache';\n\nconst sessions = {};\n\n/**\n* Function to make sure we release handle caches when they are closed.\n*\n* @param {Session} session The session instance to listen on.\n*/\nconst bindSession = (session) => {\n  if (!sessions[session.id]) {\n    const cache = {};\n    sessions[session.id] = cache;\n    session.on('traffic:received', data => data.close && data.close.forEach(handle => delete cache[handle]));\n    session.on('closed', () => delete sessions[session.id]);\n  }\n};\n\n/**\n* Simple function that ensures the session events has been bound, and returns\n* either an existing key-value cache or creates one for the specified handle.\n*\n* @param {Session} session The session that owns the handle.\n* @param {Number} handle The object handle to retrieve the cache for.\n* @returns {KeyValueCache} The cache instance.\n*/\nconst getHandleCache = (session, handle) => {\n  bindSession(session);\n  const cache = sessions[session.id];\n  if (!cache[handle]) {\n    cache[handle] = new KeyValueCache();\n  }\n  return cache[handle];\n};\n\n/**\n* Function used to apply a list of patches and return the patched value.\n* @param {Session} session The session.\n* @param {Number} handle The object handle.\n* @param {String} cacheId The cacheId.\n* @param {Array} patches The patches.\n* @returns {Object} Returns the patched value.\n*/\nconst patchValue = (session, handle, cacheId, patches) => {\n  const cache = getHandleCache(session, handle);\n  let entry = cache.get(cacheId);\n  if (typeof entry === 'undefined') {\n    entry = Array.isArray(patches[0].value) ? [] : {};\n  }\n  if (patches.length) {\n    if (patches[0].path === '/' && typeof patches[0].value !== 'object') {\n      // 'plain' values on root path is not supported (no object reference),\n      // so we simply store the value directly:\n      entry = patches[0].value;\n    } else {\n      JSONPatch.apply(entry, patches);\n    }\n    cache.set(cacheId, entry);\n  }\n  return entry;\n};\n\n/**\n* Process delta interceptor.\n* @param {Session} session The session the intercept is being executed on.\n* @param {Object} request The JSON-RPC request.\n* @param {Object} response The response.\n* @returns {Object} Returns the patched response\n*/\nexport default function deltaInterceptor(session, request, response) {\n  const { delta, result } = response;\n  if (delta) {\n    // when delta is on the response data is expected to be an array of patches:\n    Object.keys(result).forEach((key) => {\n      if (!Array.isArray(result[key])) {\n        throw new Error('Unexpected RPC response, expected array of patches');\n      }\n      result[key] = patchValue(session, request.handle, `${request.method}-${key}`, result[key]);\n    });\n    // return a cloned response object to avoid patched object references:\n    return JSON.parse(JSON.stringify(response));\n  }\n  return response;\n}\n\n// export object reference for testing purposes:\ndeltaInterceptor.sessions = sessions;\n","/**\n* Process error interceptor.\n* @param {Object} session - The session the intercept is being executed on.\n* @param {Object} request - The JSON-RPC request.\n* @param {Object} response - The response.\n* @returns {Object} - Returns the defined error for an error, else the response.\n*/\nexport default function errorInterceptor(session, request, response) {\n  if (typeof response.error !== 'undefined') {\n    const data = response.error;\n    const error = new Error(data.message);\n    error.code = data.code;\n    error.parameter = data.parameter;\n    return session.config.Promise.reject(error);\n  }\n  return response;\n}\n","const RETURN_KEY = 'qReturn';\n\n/**\n* Picks out the result \"out\" parameter based on the QIX method+schema, with\n* some specific handling for some methods that breaks the predictable protocol.\n* @param {Object} session - The session the intercept is being executed on.\n* @param {Object} request - The JSON-RPC request.\n* @param {Object} response - The response.\n* @returns {Object} - Returns the result property on the response\n*/\nexport default function outParamInterceptor(session, request, response) {\n  if (request.method === 'CreateSessionApp' || request.method === 'CreateSessionAppFromApp') {\n    // this method returns multiple out params that we need\n    // to normalize before processing the response further:\n    response[RETURN_KEY].qGenericId = response[RETURN_KEY].qGenericId || response.qSessionAppId;\n  } else if (request.method === 'GetInteract') {\n    // this method returns a qReturn value when it should only return\n    // meta.outKey:\n    delete response[RETURN_KEY];\n  }\n\n  if (hasOwnProperty.call(response, RETURN_KEY)) {\n    return response[RETURN_KEY];\n  } else if (request.outKey !== -1) {\n    return response[request.outKey];\n  }\n\n  return response;\n}\n","/**\n* Process result interceptor.\n* @param {Object} session - The session the intercept is being executed on.\n* @param {Object} request - The JSON-RPC request.\n* @param {Object} response - The response.\n* @returns {Object} - Returns the result property on the response\n*/\nexport default function resultInterceptor(session, request, response) {\n  return response.result;\n}\n","import deltaRequest from './interceptors/request/delta';\nimport apiResponse from './interceptors/response/api';\nimport deltaResponse from './interceptors/response/delta';\nimport errorResponse from './interceptors/response/error';\nimport outParamResponse from './interceptors/response/out-param';\nimport resultResponse from './interceptors/response/result';\n\nclass Intercept {\n  /**\n  * Create a new Intercept instance.\n  * @param {Object} options The configuration options for this class.\n  * @param {Promise} options.Promise The promise constructor to use.\n  * @param {ApiCache} options.apis The ApiCache instance to use.\n  * @param {Array<Object>} [options.request] The additional request interceptors to use.\n  * @param {Array<Object>} [options.response] The additional response interceptors to use.\n  */\n  constructor(options) {\n    Object.assign(this, options);\n    this.request = [{ onFulfilled: deltaRequest }, ...this.request || []];\n    this.response = [\n      { onFulfilled: errorResponse },\n      { onFulfilled: deltaResponse },\n      { onFulfilled: resultResponse },\n      { onFulfilled: outParamResponse },\n      ...this.response || [],\n      { onFulfilled: apiResponse },\n    ];\n  }\n\n  /**\n  * Execute the request interceptor queue, each interceptor will get the result from\n  * the previous interceptor.\n  * @param {Object} session The session instance to execute against.\n  * @param {Promise} promise The promise to chain on to.\n  * @returns {Promise}\n  */\n  executeRequests(session, promise) {\n    return this.request.reduce((interception, interceptor) => {\n      const intercept = interceptor.onFulfilled &&\n        interceptor.onFulfilled.bind(this, session);\n      return interception.then(intercept);\n    }, promise);\n  }\n\n  /**\n  * Execute the response interceptor queue, each interceptor will get the result from\n  * the previous interceptor.\n  * @param {Object} session The session instance to execute against.\n  * @param {Promise} promise The promise to chain on to.\n  * @param {Object} request The JSONRPC request object for the intercepted response.\n  * @returns {Promise}\n  */\n  executeResponses(session, promise, request) {\n    return this.response.reduce(\n      (interception, interceptor) =>\n        interception.then(\n          interceptor.onFulfilled && interceptor.onFulfilled.bind(this, session, request),\n          interceptor.onRejected && interceptor.onRejected.bind(this, session, request),\n        )\n      , promise,\n    );\n  }\n}\n\nexport default Intercept;\n","import KeyValueCache from './cache';\n\n/**\n* API cache for instances of QIX types, e.g. GenericObject.\n* @extends KeyValueCache\n*/\nclass ApiCache extends KeyValueCache {\n  /**\n  * Adds an API.\n  * @function ApiCache#add\n  * @param {Number} handle - The handle for the API.\n  * @param {*} api - The API.\n  * @returns {{api: *}} The entry.\n  */\n  add(handle, api) {\n    const entry = { api };\n    super.add(handle.toString(), entry);\n    api.on('closed', () => this.remove(handle));\n    return entry;\n  }\n\n  /**\n  * Gets an API.\n  * @function ApiCache#getApi\n  * @param {Number} handle - The handle for the API.\n  * @returns {*} The API for the handle.\n  */\n  getApi(handle) {\n    const entry = typeof handle !== 'undefined' ? this.get(handle.toString()) : undefined;\n    return entry && entry.api;\n  }\n\n  /**\n  * Gets a list of APIs.\n  * @function ApiCache#getApis\n  * @returns {Array} The list of entries including `handle` and `api` properties for each entry.\n  */\n  getApis() {\n    return super.getAll().map(entry =>\n      ({\n        handle: entry.key,\n        api: entry.value.api,\n      }));\n  }\n\n  /**\n  * Gets a list of APIs with a given type.\n  * @function ApiCache#getApisByType\n  * @param {String} type - The type of APIs to get.\n  * @returns {Array} The list of entries including `handle` and `api` properties for each entry.\n  */\n  getApisByType(type) {\n    return this.getApis().filter(entry => entry.api.type === type);\n  }\n}\n\nexport default ApiCache;\n","import Session from './session';\nimport Schema from './schema';\nimport RPC from './rpc';\nimport SuspendResume from './suspend-resume';\nimport Intercept from './intercept';\nimport ApiCache from './api-cache';\n\n/**\n* Qix service.\n*/\nclass Qix {\n  /**\n  * Function used to get a session.\n  * @param {Configuration} config The configuration object for this session.\n  * @returns {Object} Returns a session instance.\n  */\n  static getSession(config) {\n    const {\n      createSocket,\n      Promise,\n      requestInterceptors,\n      responseInterceptors,\n      url,\n    } = config;\n    const apis = new ApiCache();\n    const intercept = new Intercept({\n      apis,\n      Promise,\n      request: requestInterceptors,\n      response: responseInterceptors,\n    });\n    const rpc = new RPC({ createSocket, Promise, url });\n    const suspendResume = new SuspendResume({ apis, Promise, rpc });\n    const session = new Session({\n      apis,\n      config,\n      intercept,\n      rpc,\n      suspendResume,\n    });\n    return session;\n  }\n\n  /**\n  * Function used to create a QIX session.\n  * @param {Object} config The configuration object for the QIX session.\n  * @returns {Session} Returns a new QIX session.\n  */\n  static create(config) {\n    Qix.configureDefaults(config);\n    config.mixins.forEach((mixin) => {\n      config.definition.registerMixin(mixin);\n    });\n    return Qix.getSession(config);\n  }\n\n  /**\n  * Function used to configure defaults.\n  * @param {Configuration} config The configuration object for how to connect\n  *                               and retrieve end QIX APIs.\n  */\n  static configureDefaults(config) {\n    if (!config) {\n      throw new Error('You need to supply a configuration.');\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (!config.Promise && typeof Promise === 'undefined') {\n      throw new Error('Your environment has no Promise implementation. You must provide a Promise implementation in the config.');\n    }\n\n    if (typeof config.createSocket !== 'function' && typeof WebSocket === 'function') {\n      // eslint-disable-next-line no-undef\n      config.createSocket = url => new WebSocket(url);\n    }\n\n    if (typeof config.suspendOnClose === 'undefined') {\n      config.suspendOnClose = false;\n    }\n\n    config.protocol = config.protocol || {};\n    config.protocol.delta = typeof config.protocol.delta !== 'undefined' ? config.protocol.delta : true;\n    // eslint-disable-next-line no-restricted-globals\n    config.Promise = config.Promise || Promise;\n    config.mixins = config.mixins || [];\n    config.definition = config.definition || new Schema(config);\n  }\n}\n\nexport default Qix;\n"],"names":["obj","keys","EventEmitter","prototype","forEach","key","init","RPC_CLOSE_NORMAL","RPC_CLOSE_MANUAL_SUSPEND","cacheId","Session","options","session","Promise","config","definition","mixin","id","rpc","on","onRpcError","bind","onRpcClosed","onRpcMessage","onRpcNotification","onRpcTraffic","onSessionClosed","err","suspendResume","isSuspended","emit","evt","code","suspendOnClose","suspend","then","initiator","response","change","emitHandleChanged","handle","close","emitHandleClosed","method","params","dir","data","apis","getApis","entry","api","removeAllListeners","clear","args","type","genericType","getApi","generate","create","add","globalPromise","open","getObjectApi","global","request","reject","Error","createRequestId","promise","intercept","executeRequests","resolve","augmentedRequest","babelHelpers.extends","protocol","outKey","send","retry","executeResponses","addToPromiseChain","onlyIfAttached","resume","value","undefined","name","patchedThen","chain","apply","KeyValueCache","entries","Object","map","filter","hasOwnProperty","toCamelCase","symbol","substring","toLowerCase","namedParamFacade","base","defaults","length","babelHelpers.typeof","valid","every","call","Schema","schema","mixins","types","extend","override","Array","isArray","push","cached","typeKey","entryList","get","structs","factory","generateApi","generateDefaultApi","mixinType","mixinNamedParamFacade","customKey","instance","defineProperties","mixinList","concat","out","Out","Name","fnName","generatedMethod","baseFn","wrappedFn","In","reduce","result","item","DefaultValue","namedParamWrapper","RPCResolver","RPC","resolvers","requestId","openedPromise","force","socket","createSocket","url","onopen","onOpen","onclose","onClose","onerror","onError","onmessage","onMessage","registerResolver","closedPromise","opened","resolveWith","event","closed","rejectAllOutstandingResolvers","message","reason","rejectWith","JSON","parse","resolver","unregisterResolver","resolvedId","rejectedId","readyState","OPEN","jsonrpc","stringify","ON_ATTACHED_TIMEOUT_MS","SuspendResume","openDocParams","reopen","sessionState","changed","getApisByType","pop","doc","error","qReturn","qHandle","tasks","buildGetMethodName","all","restoreRpcConnection","restoreGlobal","restoreDoc","restoreDocObjects","catch","timeout","timer","notificationResolve","notificationReceived","notificationPromise","waitForNotification","setTimeout","onNotification","qSessionState","state","removeListener","replace","SUCCESS_KEY","deltaRequestInterceptor","delta","apiInterceptor","qType","qGenericId","qGenericType","originalExtend","JSONPatch","isObject","v","isUndef","isFunction","generateValue","val","isSpecialProperty","getParent","str","seperator","parts","split","slice","numPart","part","i","newPart","isNaN","emptyObject","getOwnPropertyDescriptor","configurable","compare","a","b","isIdentical","l","patchArray","original","newA","basePath","patches","oldA","tmpIdx","findIndex","idx","qInfo","qId","ii","ll","splice","newData","oldVal","tmpPath","patch","parent","path","target","from","op","newValues","oldParent","clone","createPatch","updateObject","sessions","bindSession","cache","getHandleCache","patchValue","set","deltaInterceptor","errorInterceptor","parameter","RETURN_KEY","outParamInterceptor","qSessionAppId","resultInterceptor","Intercept","onFulfilled","deltaRequest","errorResponse","deltaResponse","resultResponse","outParamResponse","apiResponse","interception","interceptor","onRejected","ApiCache","toString","remove","babelHelpers.get","Qix","requestInterceptors","responseInterceptors","configureDefaults","registerMixin","getSession","WebSocket"],"mappings":"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"}